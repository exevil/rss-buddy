name: Process RSS Feeds

on:
  schedule:
    - cron: '0 */12 * * *'  # Run every 12 hours
  workflow_dispatch:  # Allow manual trigger

jobs:
  process:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history to ensure we have the previous state
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: pip install -r requirements.txt
      
      # If the output branch exists, get the latest state file
      - name: Check if output branch exists
        id: check_branch
        run: |
          if git ls-remote --heads origin output | grep output; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Fetch latest state from output branch if it exists
        if: steps.check_branch.outputs.exists == 'true'
        run: |
          mkdir -p processed_feeds
          git fetch origin output
          git checkout -b temp-output origin/output
          if [ -f "processed_state.json" ]; then
            cp processed_state.json processed_feeds/
          fi
          git checkout -
        
      - name: Process RSS feeds
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          RSS_FEEDS: ${{ vars.RSS_FEEDS || secrets.RSS_FEEDS }}
          USER_PREFERENCE_CRITERIA: ${{ vars.USER_PREFERENCE_CRITERIA || secrets.USER_PREFERENCE_CRITERIA }}
          DAYS_LOOKBACK: ${{ vars.DAYS_LOOKBACK || secrets.DAYS_LOOKBACK }}
          AI_MODEL: ${{ vars.AI_MODEL || secrets.AI_MODEL }}
          SUMMARY_MAX_TOKENS: ${{ vars.SUMMARY_MAX_TOKENS || secrets.SUMMARY_MAX_TOKENS }}
        run: python rss_processor.py
        
      - name: Generate GitHub Pages
        run: python generate_pages.py processed_feeds docs
      
      - name: Create and update output branch
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          
          # Create a new orphan branch for output or checkout existing one
          if [ "${{ steps.check_branch.outputs.exists }}" == "true" ]; then
            git checkout -b output origin/output
            # Remove all existing files in the branch
            git rm -rf .
          else
            # Create a new orphaned branch (no history)
            git checkout --orphan output
            git rm -rf .
          fi
          
          # Copy the processed feeds and state to the root
          mkdir -p .github/workflows
          cp -r processed_feeds/* .
          
          # Create a minimal README for the output branch
          cat > README.md << 'EOF'
          # RSS-Buddy Output
          
          This branch contains only the processed RSS feeds and state file generated by rss-buddy.
          
          The main branch contains the actual source code of the project.
          
          These files are automatically updated by GitHub Actions.
          EOF
          
          # Create a basic workflow file to ensure GitHub Actions keeps working
          cat > .github/workflows/readme.yml << 'EOF'
          name: Readme
          on:
            workflow_dispatch:
          jobs:
            test:
              runs-on: ubuntu-latest
              steps:
                - uses: actions/checkout@v3
          EOF
          
          # Add, commit and push
          git add .
          git commit -m "Update processed feeds - $(date +'%Y-%m-%d %H:%M:%S')" || echo "No changes to commit"
          git push origin output -f
          
          # Return to main branch
          git checkout -
      
      # Setup and deploy GitHub Pages from the docs directory
      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Upload artifacts
        uses: actions/upload-pages-artifact@v2
        with:
          path: docs
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 